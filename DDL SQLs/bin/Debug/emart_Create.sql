/*
Deployment script for emart

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "emart"
:setvar DefaultFilePrefix "emart"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'disable';


GO
PRINT N'Creating [dbo].[purchaseDetail]...';


GO
CREATE TABLE [dbo].[purchaseDetail] (
    [purchaseId] BIGINT     NOT NULL,
    [productId]  BIGINT     NOT NULL,
    [quantity]   INT        NOT NULL,
    [price]      FLOAT (53) NOT NULL
);


GO
PRINT N'Creating [dbo].[follower]...';


GO
CREATE TABLE [dbo].[follower] (
    [userId]     VARCHAR (20) NOT NULL,
    [followerId] VARCHAR (20) NOT NULL,
    UNIQUE NONCLUSTERED ([userId] ASC, [followerId] ASC)
);


GO
PRINT N'Creating [dbo].[review]...';


GO
CREATE TABLE [dbo].[review] (
    [productId] BIGINT        NOT NULL,
    [userId]    VARCHAR (20)  NOT NULL,
    [comment]   VARCHAR (300) NULL,
    [rating]    INT           NULL,
    UNIQUE NONCLUSTERED ([productId] ASC, [userId] ASC)
);


GO
PRINT N'Creating [dbo].[product]...';


GO
CREATE TABLE [dbo].[product] (
    [productId]   BIGINT        IDENTITY (1, 1) NOT NULL,
    [title]       VARCHAR (30)  NOT NULL,
    [imgnm]       VARCHAR (20)  NOT NULL,
    [category]    VARCHAR (30)  NOT NULL,
    [subCategory] VARCHAR (30)  NOT NULL,
    [desc]        VARCHAR (500) NOT NULL,
    [specs]       VARCHAR (500) NOT NULL,
    [price]       FLOAT (53)    NOT NULL,
    [condition]   CHAR (4)      NOT NULL,
    [sellerId]    VARCHAR (20)  NOT NULL,
    [quant]       INT           NOT NULL,
    [sold]        INT           NOT NULL,
    [avail]       CHAR (5)      NOT NULL,
    PRIMARY KEY CLUSTERED ([productId] ASC)
);


GO
PRINT N'Creating [dbo].[like]...';


GO
CREATE TABLE [dbo].[like] (
    [productId] BIGINT       NOT NULL,
    [userId]    VARCHAR (20) NOT NULL,
    UNIQUE NONCLUSTERED ([userId] ASC, [productId] ASC)
);


GO
PRINT N'Creating [dbo].[zip]...';


GO
CREATE TABLE [dbo].[zip] (
    [zipCode] VARCHAR (10) NOT NULL,
    [state]   VARCHAR (20) NOT NULL,
    [city]    VARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([zipCode] ASC)
);


GO
PRINT N'Creating [dbo].[user]...';


GO
CREATE TABLE [dbo].[user] (
    [userId]           VARCHAR (20) NOT NULL,
    [pass]             VARCHAR (20) NOT NULL,
    [imgid]            VARCHAR (20) NOT NULL,
    [firstName]        VARCHAR (20) NOT NULL,
    [lastName]         VARCHAR (20) NOT NULL,
    [email]            VARCHAR (25) NOT NULL,
    [street address 1] VARCHAR (30) NULL,
    [street address 2] VARCHAR (30) NULL,
    [zip]              VARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([userId] ASC)
);


GO
PRINT N'Creating [dbo].[purchase]...';


GO
CREATE TABLE [dbo].[purchase] (
    [purchaseId]      BIGINT       IDENTITY (1, 1) NOT NULL,
    [amount]          FLOAT (53)   NULL,
    [userId]          VARCHAR (20) NOT NULL,
    [deliveryAddress] VARCHAR (30) NOT NULL,
    [deliveryZip]     VARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([purchaseId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_purchaseDetail_To_purchase]...';


GO
ALTER TABLE [dbo].[purchaseDetail]
    ADD CONSTRAINT [FK_purchaseDetail_To_purchase] FOREIGN KEY ([purchaseId]) REFERENCES [dbo].[purchase] ([purchaseId]);


GO
PRINT N'Creating [dbo].[FK_purchaseDetail_To_Product]...';


GO
ALTER TABLE [dbo].[purchaseDetail]
    ADD CONSTRAINT [FK_purchaseDetail_To_Product] FOREIGN KEY ([productId]) REFERENCES [dbo].[product] ([productId]);


GO
PRINT N'Creating [dbo].[FK_follower_user1]...';


GO
ALTER TABLE [dbo].[follower]
    ADD CONSTRAINT [FK_follower_user1] FOREIGN KEY ([followerId]) REFERENCES [dbo].[user] ([userId]);


GO
PRINT N'Creating [dbo].[FK_follower_user2]...';


GO
ALTER TABLE [dbo].[follower]
    ADD CONSTRAINT [FK_follower_user2] FOREIGN KEY ([userId]) REFERENCES [dbo].[user] ([userId]);


GO
PRINT N'Creating [dbo].[FK_review_User]...';


GO
ALTER TABLE [dbo].[review]
    ADD CONSTRAINT [FK_review_User] FOREIGN KEY ([userId]) REFERENCES [dbo].[user] ([userId]);


GO
PRINT N'Creating [dbo].[FK_review_Product]...';


GO
ALTER TABLE [dbo].[review]
    ADD CONSTRAINT [FK_review_Product] FOREIGN KEY ([productId]) REFERENCES [dbo].[product] ([productId]);


GO
PRINT N'Creating [dbo].[FK_product_User]...';


GO
ALTER TABLE [dbo].[product]
    ADD CONSTRAINT [FK_product_User] FOREIGN KEY ([sellerId]) REFERENCES [dbo].[user] ([userId]);


GO
PRINT N'Creating [dbo].[FK_like_Product]...';


GO
ALTER TABLE [dbo].[like]
    ADD CONSTRAINT [FK_like_Product] FOREIGN KEY ([productId]) REFERENCES [dbo].[product] ([productId]);


GO
PRINT N'Creating [dbo].[FK_like_User]...';


GO
ALTER TABLE [dbo].[like]
    ADD CONSTRAINT [FK_like_User] FOREIGN KEY ([userId]) REFERENCES [dbo].[user] ([userId]);


GO
PRINT N'Creating [dbo].[FK_users_To_zip]...';


GO
ALTER TABLE [dbo].[user]
    ADD CONSTRAINT [FK_users_To_zip] FOREIGN KEY ([zip]) REFERENCES [dbo].[zip] ([zipCode]);


GO
PRINT N'Creating [dbo].[FK_purchase_To_zip]...';


GO
ALTER TABLE [dbo].[purchase]
    ADD CONSTRAINT [FK_purchase_To_zip] FOREIGN KEY ([deliveryZip]) REFERENCES [dbo].[zip] ([zipCode]);


GO
PRINT N'Creating [dbo].[FK_purchase_To_user]...';


GO
ALTER TABLE [dbo].[purchase]
    ADD CONSTRAINT [FK_purchase_To_user] FOREIGN KEY ([userId]) REFERENCES [dbo].[user] ([userId]);


GO
PRINT N'Creating [dbo].[CK_review_Rating]...';


GO
ALTER TABLE [dbo].[review]
    ADD CONSTRAINT [CK_review_Rating] CHECK (rating < 5 AND rating >0);


GO
PRINT N'Creating [dbo].[CK_review_Entry]...';


GO
ALTER TABLE [dbo].[review]
    ADD CONSTRAINT [CK_review_Entry] CHECK (rating != NULL OR comment != null);


GO
PRINT N'Creating [dbo].[CK_product_avail]...';


GO
ALTER TABLE [dbo].[product]
    ADD CONSTRAINT [CK_product_avail] CHECK (avail = 'true' OR avail = 'false');


GO
PRINT N'Creating [dbo].[CK_product_condition]...';


GO
ALTER TABLE [dbo].[product]
    ADD CONSTRAINT [CK_product_condition] CHECK (condition = 'new' OR condition = 'used');


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c8822ece-5f01-4ba9-9a8a-cc6332c2c791')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c8822ece-5f01-4ba9-9a8a-cc6332c2c791')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6028348f-e694-42a2-816e-557120743b89')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6028348f-e694-42a2-816e-557120743b89')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '726dcf4c-b3e7-472d-8a66-58ca16c0be1e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('726dcf4c-b3e7-472d-8a66-58ca16c0be1e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b923ce87-b532-4f42-90aa-b3f381b5fb88')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b923ce87-b532-4f42-90aa-b3f381b5fb88')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a5f712de-695b-468f-a4dc-a57209923ee6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a5f712de-695b-468f-a4dc-a57209923ee6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f887cf3b-6de7-4391-b4c9-27ca4969b94d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f887cf3b-6de7-4391-b4c9-27ca4969b94d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9ad865d1-202f-454a-b930-9d065d6f1e88')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9ad865d1-202f-454a-b930-9d065d6f1e88')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd976a140-2484-4d92-9037-a604991c7274')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d976a140-2484-4d92-9037-a604991c7274')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '10c1ad9a-f796-4157-939d-2b444ebd88dd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('10c1ad9a-f796-4157-939d-2b444ebd88dd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ca2cde68-7d90-4ffd-bb71-f21deedb59b0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ca2cde68-7d90-4ffd-bb71-f21deedb59b0')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
